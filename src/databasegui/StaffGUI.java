/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databasegui;

import javax.swing.JOptionPane;

/**
 *
 * @author b-hou
 */
public class StaffGUI extends javax.swing.JFrame {
 private CustomerConnection CustomerConnection;
    private StaffClass[] arrayOfStaff;
    private int currentIndex;
    private int numberOfRecords;
    /**
     * Creates new form StaffGUI
     */
    public StaffGUI() {
        initComponents();
                CustomerConnection = new CustomerConnection();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStaffName = new javax.swing.JTextField();
        txtStaffStreet = new javax.swing.JTextField();
        txtStaffCity = new javax.swing.JTextField();
        txtStaffMobile = new javax.swing.JTextField();
        txtStaffSurname = new javax.swing.JTextField();
        txtStaffTown = new javax.swing.JTextField();
        txtStaffPostcode = new javax.swing.JTextField();
        btnBrowseStaff = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtStaffID = new javax.swing.JTextField();
        currRecordTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        maxRecordTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSearchField = new javax.swing.JTextField();
        btnQuery = new javax.swing.JButton();
        btnAddStaff = new javax.swing.JButton();
        btnMain = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        btnPrevious.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrevious);
        btnPrevious.setBounds(467, 395, 123, 29);

        btnNext.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        getContentPane().add(btnNext);
        btnNext.setBounds(619, 395, 81, 29);

        jLabel1.setFont(new java.awt.Font("Impact", 2, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Staff");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(290, 10, 150, 45);

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 133, 106, 21);

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Street:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 189, 106, 21);

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("City:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(330, 110, 105, 21);

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Mobile:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(330, 170, 105, 21);

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Surname:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 161, 106, 21);

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Town:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(330, 200, 106, 21);

        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Postcode:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(330, 140, 105, 21);
        getContentPane().add(txtStaffName);
        txtStaffName.setBounds(126, 135, 135, 26);
        getContentPane().add(txtStaffStreet);
        txtStaffStreet.setBounds(126, 191, 135, 26);
        getContentPane().add(txtStaffCity);
        txtStaffCity.setBounds(450, 110, 190, 26);
        getContentPane().add(txtStaffMobile);
        txtStaffMobile.setBounds(450, 170, 190, 26);
        getContentPane().add(txtStaffSurname);
        txtStaffSurname.setBounds(126, 163, 135, 26);
        getContentPane().add(txtStaffTown);
        txtStaffTown.setBounds(450, 200, 190, 26);
        getContentPane().add(txtStaffPostcode);
        txtStaffPostcode.setBounds(450, 140, 190, 26);

        btnBrowseStaff.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        btnBrowseStaff.setText("View all staff");
        btnBrowseStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseStaffActionPerformed(evt);
            }
        });
        getContentPane().add(btnBrowseStaff);
        btnBrowseStaff.setBounds(10, 360, 189, 29);

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("StaffID:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 102, 106, 21);
        getContentPane().add(txtStaffID);
        txtStaffID.setBounds(126, 107, 135, 26);

        currRecordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currRecordTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(currRecordTextField);
        currRecordTextField.setBounds(284, 401, 38, 26);

        jLabel10.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Of");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(332, 399, 29, 21);

        maxRecordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxRecordTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(maxRecordTextField);
        maxRecordTextField.setBounds(371, 395, 44, 29);

        jLabel11.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Search by name:");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(55, 296, 164, 21);

        txtSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchFieldActionPerformed(evt);
            }
        });
        getContentPane().add(txtSearchField);
        txtSearchField.setBounds(237, 298, 180, 26);

        btnQuery.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        btnQuery.setText("Search");
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });
        getContentPane().add(btnQuery);
        btnQuery.setBounds(423, 292, 107, 29);

        btnAddStaff.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        btnAddStaff.setText("Add Staff Member");
        btnAddStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStaffActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddStaff);
        btnAddStaff.setBounds(10, 395, 221, 29);

        btnMain.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 18)); // NOI18N
        btnMain.setText("Back to main menu");
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });
        getContentPane().add(btnMain);
        btnMain.setBounds(485, 360, 215, 29);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkgimages/car seat.jpg"))); // NOI18N
        jLabel12.setText("jLabel12");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(0, 0, 710, 440);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseStaffActionPerformed
 try {
            //set up array to store the data sent back from the StudentConnection             
            arrayOfStaff = CustomerConnection.getAllStaff();
            //number of items in the array             
            numberOfRecords = CustomerConnection.numRecordsInQuery;
            currentIndex = 0;
            if (numberOfRecords != 0) {
                //display the first students details                 
                String idText = Integer.toString(arrayOfStaff[currentIndex].getstaffID());

                txtStaffID.setText(idText);  
                
                txtStaffName.setText(arrayOfStaff[currentIndex].getFirstname());                 
                txtStaffSurname.setText(arrayOfStaff[currentIndex].getSurname());   
                txtStaffStreet.setText(arrayOfStaff[currentIndex].getStreet());
                txtStaffMobile.setText(arrayOfStaff[currentIndex].getTown());
                txtStaffTown.setText(arrayOfStaff[currentIndex].getCity());
                txtStaffPostcode.setText(arrayOfStaff[currentIndex].getPostcode());
                txtStaffCity.setText(arrayOfStaff[currentIndex].getmobileNumber());

               
                //display the current index for current and last record                 
                currRecordTextField.setText(Integer.toString(currentIndex + 1));                 
                maxRecordTextField.setText(Integer.toString(numberOfRecords));                 
                //enable buttons to navigate through students                 
                btnPrevious.setEnabled(true);                 
                btnNext.setEnabled(true); 
                
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_btnBrowseStaffActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
         numberOfRecords = CustomerConnection.numRecordsInQuery;         
        //button will move to the record after current one         
        //if the last record is showing there will be no response         
        if (currentIndex < numberOfRecords - 1) {             
            currentIndex++;
            currRecordTextField.setText(Integer.toString(currentIndex + 1));             
            //display the students details at currentIndex             
            String idText = Integer.toString(arrayOfStaff[currentIndex].getstaffID());             
            txtStaffID.setText(idText);             
            txtStaffName.setText(arrayOfStaff[currentIndex].getFirstname());             
            txtStaffSurname.setText(arrayOfStaff[currentIndex].getSurname()); 
            txtStaffStreet.setText(arrayOfStaff[currentIndex].getStreet());
            txtStaffTown.setText(arrayOfStaff[currentIndex].getTown());
            txtStaffCity.setText(arrayOfStaff[currentIndex].getCity());
            txtStaffPostcode.setText(arrayOfStaff[currentIndex].getPostcode());
            txtStaffMobile.setText(arrayOfStaff[currentIndex].getmobileNumber());
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        if (currentIndex != 0) {             
            currentIndex--;            
            currRecordTextField.setText(Integer.toString(currentIndex + 1));             
            //display the students details at currentIndex             
            String idText = Integer.toString(arrayOfStaff[currentIndex].getstaffID());             
            txtStaffID.setText(idText);             
            txtStaffName.setText(arrayOfStaff[currentIndex].getFirstname());             
            txtStaffSurname.setText(arrayOfStaff[currentIndex].getSurname()); 
            txtStaffStreet.setText(arrayOfStaff[currentIndex].getStreet());
            txtStaffTown.setText(arrayOfStaff[currentIndex].getTown());
            txtStaffCity.setText(arrayOfStaff[currentIndex].getCity());
            txtStaffPostcode.setText(arrayOfStaff[currentIndex].getPostcode());
            txtStaffMobile.setText(arrayOfStaff[currentIndex].getmobileNumber());
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void txtSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchFieldActionPerformed
                        
    }//GEN-LAST:event_txtSearchFieldActionPerformed

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
 String name = txtSearchField.getText();         
        //query database for students with LastName = name         
        arrayOfStaff = CustomerConnection.getStaffbyName(name);         
        numberOfRecords = CustomerConnection.numRecordsInQuery;         
        //if there were any matches  
        currentIndex = 0;         
        if (numberOfRecords != 0) {             
            //display the first students details             
            txtStaffID.setText(Integer.toString(arrayOfStaff[currentIndex].getstaffID()));             
            txtStaffName.setText(arrayOfStaff[currentIndex].getFirstname());             
            txtStaffSurname.setText(arrayOfStaff[currentIndex].getSurname());
            txtStaffStreet.setText(arrayOfStaff[currentIndex].getStreet());
            txtStaffTown.setText(arrayOfStaff[currentIndex].getTown());
            txtStaffCity.setText(arrayOfStaff[currentIndex].getCity());
            txtStaffPostcode.setText(arrayOfStaff[currentIndex].getPostcode());
            txtStaffMobile.setText(arrayOfStaff[currentIndex].getmobileNumber());
            
            //display the current index for current and last record             
            currRecordTextField.setText(Integer.toString(currentIndex+1));             
            maxRecordTextField.setText(Integer.toString(numberOfRecords));  
        } else { 
            JOptionPane.showMessageDialog(this, "No Records found", "Query Result", JOptionPane.PLAIN_MESSAGE);         
        }     
    }//GEN-LAST:event_btnQueryActionPerformed

    private void btnAddStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStaffActionPerformed
boolean done = CustomerConnection.addStaff(txtStaffName.getText(), txtStaffSurname.getText(),txtStaffStreet.getText(),txtStaffTown.getText(),txtStaffCity.getText(),txtStaffPostcode.getText(),txtStaffMobile.getText()); 
        if (done) {             
            JOptionPane.showMessageDialog(this, "Staff Member added", "Adding Record", JOptionPane.PLAIN_MESSAGE); 
            //reload the records by calling the browseButtonActionPerformed method with the event  
            btnBrowseStaffActionPerformed(evt);  
        } else {             
            JOptionPane.showMessageDialog(this, "Customer not added", "Error", JOptionPane.PLAIN_MESSAGE); 
        }        // TODO add your handling code here:
                                  // TODO add your handling code here:
    }//GEN-LAST:event_btnAddStaffActionPerformed

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
          MainMenu form1 = new MainMenu();
          form1.setVisible( true );
          this.setVisible(false);
         
    }//GEN-LAST:event_btnMainActionPerformed

    private void maxRecordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxRecordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxRecordTextFieldActionPerformed

    private void currRecordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currRecordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currRecordTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddStaff;
    private javax.swing.JButton btnBrowseStaff;
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnQuery;
    private javax.swing.JTextField currRecordTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField maxRecordTextField;
    private javax.swing.JTextField txtSearchField;
    private javax.swing.JTextField txtStaffCity;
    private javax.swing.JTextField txtStaffID;
    private javax.swing.JTextField txtStaffMobile;
    private javax.swing.JTextField txtStaffName;
    private javax.swing.JTextField txtStaffPostcode;
    private javax.swing.JTextField txtStaffStreet;
    private javax.swing.JTextField txtStaffSurname;
    private javax.swing.JTextField txtStaffTown;
    // End of variables declaration//GEN-END:variables
}
